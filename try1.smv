-- /*---------------------------------------------------------------------------.
--  | Path quantifier:                                                          |
--  |     A—“for every path”                                                    |
--  |     E—“there exists a path”                                               |
--  | State quantifier:                                                         |
--  |     Fp—p holds sometime in the future                                     |
--  |     Gp—p holds globally in the future                                     |
--  |     Xp—p holds next time                                                  |
--  |     pUq—p holds until q holds                                             |
--  |                                                                           |
--  | Examples:                                                                 |
--  | EF(started & !ready): it is possible to get to a state                    |
--  | where started holds but ready does not hold.                              |
--  |                                                                           |
--  | AG(req -> AF ack): if a request occurs, then it will be                   |
--  | eventually acknowledged.                                                  |
--  |                                                                           |
--  | AG(AF device enabled): enabled holds infinitely often                     |
--  | on every computation path.                                                |
--  |                                                                           |
--  | AG(EF restart): from any state it is possible to get to                   |
--  | the restart state.                                                        |
--  `--------------------------------------------------------------------------'*/
MODULE main
VAR
-- Diagnostico
	posicao: {empty, esq, dir, med};
    situacao: {empty, completa, incompleta, submucosa};
    palato: {empty, duro, mole};
    tipo: {pre, pos, trans};
    lado: {empty, uni, bi};
    
-- Cirurgias
    sucessoCirurgia: boolean;
    
	state: {diagnostico, ortodontiaNeonatal, posCirurgia, queiloplastia, fimTratamento};
	result: {bom, satisfatorio, ruim, abondonou};
ASSIGN
	next(tipo) :=	case
						state = diagnostico & palato = empty & situacao != submucosa	: {pos, trans};
						state = diagnostico & lado = empty & posicao = empty 			: pos;
						state = diagnostico & situacao = empty & palato = empty			: trans;
						state = diagnostico												: {pre, pos, trans};
						TRUE															: tipo;
					esac;

	init(lado) := empty;
	next(lado) :=	case
						state = diagnostico & tipo = pos					: empty;
						state = diagnostico									: {uni, bi};
						TRUE												: lado;

					esac;

	init(posicao) := empty;
	next(posicao):=	case
						state = diagnostico & tipo = pos					: empty;
						state = diagnostico & tipo = pre & lado = bi		: {esq, dir};
						state = diagnostico									: {esq, dir, med};
						TRUE												: posicao;
					esac;

	init(palato) := empty;
	next(palato) :=	case
						state = diagnostico & (tipo = pre | tipo = trans | (tipo = pos & situacao != incompleta))	: empty;
						state = diagnostico													: {duro, mole};
						TRUE																: palato;
					esac;

	init(situacao) := empty;
	next(situacao):=case
						state = diagnostico & tipo = trans			: empty;
						state = diagnostico & tipo = pre			: {completa, incompleta};
						state = diagnostico							: {completa, incompleta, submucosa};
						TRUE										: situacao;
					esac;


	init(state) := diagnostico;
	next(state) := case
						state = diagnostico : {ortodontiaNeonatal, posCirurgia, queiloplastia};
						state = ortodontiaNeonatal			: {posCirurgia, queiloplastia};
						state = queiloplastia 				: posCirurgia;
						state = posCirurgia & sucessoCirurgia : fimTratamento;
						TRUE : state;
					esac;
		
	init(sucessoCirurgia) := FALSE;
	next(sucessoCirurgia) := case
								state = posCirurgia & !sucessoCirurgia	: !sucessoCirurgia;
								TRUE 									: sucessoCirurgia;
							esac;
SPEC
	AF state = fimTratamento
SPEC
	EF (tipo = pre & lado = bi) -> pos != med
SPEC
	EF (tipo = pre) -> (palato = empty & situacao != submucosa)
SPEC
	EF tipo = pos -> (lado = empty & posicao = empty)
SPEC
	EF (tipo = pos & situacao != incompleta) -> palato = empty
SPEC
	EF tipo = trans -> (situacao = empty & palato = empty)
